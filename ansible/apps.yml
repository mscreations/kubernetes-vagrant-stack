- name: Install Github hosted CLI tools
  hosts: all
  become: true
  vars:
    bin_dir: /usr/local/bin

    github_releases:
      yq: "https://api.github.com/repos/mikefarah/yq/releases/latest"
      helm: "https://api.github.com/repos/helm/helm/releases/latest"
      jq: "https://api.github.com/repos/jqlang/jq/releases/latest"
      k9s: "https://api.github.com/repos/derailed/k9s/releases/latest"
      krew: "https://api.github.com/repos/kubernetes-sigs/krew/releases/latest"
      kubecolor: "https://api.github.com/repos/hidetatz/kubecolor/releases/latest"
      kubectx: "https://api.github.com/repos/ahmetb/kubectx/releases/latest"
      nerdctl: "https://api.github.com/repos/containerd/nerdctl/releases/latest"
      dive: "https://api.github.com/repos/wagoodman/dive/releases/latest"
      arkade: "https://api.github.com/repos/alexellis/arkade/releases/latest"
      yh: "https://api.github.com/repos/andreazorzetto/yh/releases/latest"
      etcdutl: "https://api.github.com/repos/etcd-io/etcd/releases/latest"

  tasks:
    ######################################################################
    # Fetch once, build version map, share with all hosts
    ######################################################################
    - name: Fetch latest release info (only once, delegated to localhost)
      ansible.builtin.uri:
        url: "{{ item.value }}"
        return_content: true
        headers:
          Accept: "application/vnd.github.v3+json"
      loop: "{{ github_releases | dict2items }}"
      register: gh_releases
      run_once: true
      delegate_to: kcp1
      changed_when: false

    - name: Build latest_versions fact (on localhost, once)
      ansible.builtin.set_fact:
        latest_versions: >-
          {{
            dict(gh_releases.results | map(attribute='item.key') |
                 zip(gh_releases.results | map(attribute='json.tag_name')))
          }}
      run_once: true
      delegate_to: kcp1

    - name: Share latest_versions fact with all hosts
      ansible.builtin.set_fact:
        latest_versions: "{{ hostvars[groups['all'][0]].latest_versions }}"

    - name: Show latest versions
      ansible.builtin.debug:
        var: latest_versions

    ######################################################################
    # Install yq
    ######################################################################
    - name: Install latest yq
      ansible.builtin.get_url:
        url: "https://github.com/mikefarah/yq/releases/download/{{ latest_versions.yq }}/yq_linux_amd64"
        dest: "{{ bin_dir }}/yq"
        mode: '0755'

    ######################################################################
    # Install helm
    ######################################################################
    - name: Install latest helm
      ansible.builtin.unarchive:
        src: "https://get.helm.sh/helm-{{ latest_versions.helm }}-linux-amd64.tar.gz"
        dest: "{{ bin_dir }}"
        include: ["linux-amd64/helm"]
        extra_opts: ["--strip-components=1"]
        remote_src: true
        mode: '0755'
        creates: "{{ bin_dir }}/helm"

    ######################################################################
    # Install jq
    ######################################################################
    - name: Install latest jq
      ansible.builtin.get_url:
        url: "https://github.com/jqlang/jq/releases/download/{{ latest_versions.jq }}/jq-linux-amd64"
        dest: "{{ bin_dir }}/jq"
        mode: '0755'

    ######################################################################
    # Install k9s
    ######################################################################
    - name: Install latest k9s
      ansible.builtin.unarchive:
        src: "https://github.com/derailed/k9s/releases/download/{{ latest_versions.k9s }}/k9s_Linux_amd64.tar.gz"
        dest: "{{ bin_dir }}"
        remote_src: true
        mode: '0755'
        creates: "{{ bin_dir }}/k9s"

    ######################################################################
    # Install krew
    ######################################################################
    - name: Install latest krew
      ansible.builtin.unarchive:
        src: "https://github.com/kubernetes-sigs/krew/releases/download/{{ latest_versions.krew }}/krew-linux_amd64.tar.gz"
        dest: "{{ bin_dir }}"
        remote_src: true
        extra_opts:
          - --transform
          - "s|krew-linux_amd64|krew|"
        mode: '0755'
        creates: "{{ bin_dir }}/krew"

    ######################################################################
    # Install kubecolor
    ######################################################################
    - name: Install latest kubecolor
      ansible.builtin.unarchive:
        src: "https://github.com/hidetatz/kubecolor/releases/download/{{ latest_versions.kubecolor }}/kubecolor_{{ latest_versions.kubecolor | regex_replace('^v','') }}_Linux_x86_64.tar.gz"
        dest: "{{ bin_dir }}"
        mode: '0644'
        remote_src: true
        include: ["kubecolor"]
        creates: "{{ bin_dir }}/kubecolor"

    ######################################################################
    # Install kubectx and kubens (same repo)
    ######################################################################
    - name: Install latest kubectx
      ansible.builtin.get_url:
        url: "https://github.com/ahmetb/kubectx/releases/download/{{ latest_versions.kubectx }}/kubectx"
        dest: "{{ bin_dir }}/kubectx"
        mode: '0755'

    - name: Install latest kubens
      ansible.builtin.get_url:
        url: "https://github.com/ahmetb/kubectx/releases/download/{{ latest_versions.kubectx }}/kubens"
        dest: "{{ bin_dir }}/kubens"
        mode: '0755'

    ######################################################################
    # Install nerdctl
    ######################################################################
    - name: Install latest nerdctl
      ansible.builtin.unarchive:
        src: "https://github.com/containerd/nerdctl/releases/download/{{ latest_versions.nerdctl }}/nerdctl-{{ latest_versions.nerdctl | regex_replace('^v','')  }}-linux-amd64.tar.gz"
        dest: "{{ bin_dir }}"
        remote_src: true
        mode: '0755'
        creates: "{{ bin_dir }}/nerdctl"

    ######################################################################
    # Install dive
    ######################################################################
    - name: Install latest dive
      ansible.builtin.unarchive:
        src: "https://github.com/wagoodman/dive/releases/download/{{ latest_versions.dive }}/dive_{{ latest_versions.dive | regex_replace('^v','') }}_linux_amd64.tar.gz"
        dest: "{{ bin_dir }}"
        remote_src: true
        include: ["dive"]
        mode: '0755'
        creates: "{{ bin_dir }}/dive"

    ######################################################################
    # Install arkade
    ######################################################################
    - name: Install latest arkade
      ansible.builtin.get_url:
        url: "https://github.com/alexellis/arkade/releases/download/{{ latest_versions.arkade }}/arkade"
        dest: "{{ bin_dir }}/arkade"
        mode: '0755'

    ######################################################################
    # Install yh
    ######################################################################
    - name: Install latest yh
      ansible.builtin.unarchive:
        src: "https://github.com/andreazorzetto/yh/releases/download/{{ latest_versions.yh }}/yh-linux-amd64.zip"
        dest: "{{ bin_dir }}"
        remote_src: true
        mode: '0755'
        creates: "{{ bin_dir }}/yh"

    ######################################################################
    # Install etcdutl
    ######################################################################
    - name: Install latest etcdutl
      ansible.builtin.unarchive:
        src: "https://github.com/etcd-io/etcd/releases/download/{{ latest_versions.etcdutl }}/etcd-{{ latest_versions.etcdutl }}-linux-amd64.tar.gz"
        dest: "{{ bin_dir }}"
        remote_src: true
        include: ["etcd-{{ latest_versions.etcdutl }}-linux-amd64/etcdutl"]
        extra_opts: ["--strip-components=1"]
        mode: '0755'
        creates: "{{ bin_dir }}/etcdutl"
