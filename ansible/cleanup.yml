---
- name: Perform cleanup tasks
  hosts: all
  become: true

  vars:
    # Default vagrant password hash (from /etc/shadow)
    vagrant_default_hash: "vagrant:$6$8P/WYeedh2vMmmn4$5LZtQr7MvzvtE2AGkQIlXJjZKyOUOyHwOcu5WSYBO7ls3.rgnGfl.236U0uAGbFY2ZCJt55tFBeJ1P1j.WQp/1:20352:0:99999:7:::"
  tasks:
    - name: Read /etc/shadow
      ansible.builtin.slurp:
        src: /etc/shadow
      register: shadow_file

    - name: Decode shadow file
      ansible.builtin.set_fact:
        shadow_content: "{{ shadow_file['content'] | b64decode }}"

    - name: Get vagrant user's shadow entry
      ansible.builtin.set_fact:
        vagrant_shadow_entry: "{{ shadow_content.splitlines() | select('match', '^vagrant:') | list | first }}"

    - name: Expire vagrant password if default hash
      ansible.builtin.command: passwd -e vagrant
      when: vagrant_shadow_entry == vagrant_default_hash

    
    # Following entries will reset the SSH Host key ONLY if we've never changed the password (indicating we've never logged in before)
    - name: Find existing SSH host keys
      ansible.builtin.find:
        paths: /etc/ssh
        patterns: 'ssh_host_*'
      register: ssh_keys
      when: vagrant_shadow_entry == vagrant_default_hash

    - name: Remove old SSH host keys
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      loop: "{{ ssh_keys.files }}"
      when: vagrant_shadow_entry == vagrant_default_hash

    - name: Reconfigure openssh-server to regenerate host keys
      ansible.builtin.command:
        cmd: dpkg-reconfigure openssh-server
      args:
        warn: false
      register: reconfig_result
      # changed_when: "'Creating SSH2 RSA key' in reconfig_result.stdout or 'Creating SSH2 RSA key' in reconfig_result.stderr"
      when: vagrant_shadow_entry == vagrant_default_hash

    - name: Autoremove packages
      ansible.builtin.apt:
        update_cache: true
        autoremove: true
        autoclean: true