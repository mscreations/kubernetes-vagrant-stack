---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: etcd-backup-pv
  namespace: kube-system
spec:
  capacity:
    storage: 8Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  storageClassName: manual
  hostPath:
    path: "{{ backup_dir }}"
    type: DirectoryOrCreate
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: etcd-backup
  namespace: kube-system
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteOnce
  volumeMode: Filesystem
  resources:
    requests:
      storage: 8Gi
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: etcd-backup
  namespace: kube-system
spec:
  concurrencyPolicy: Replace
  failedJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          initContainers:
          - args:
            - snapshot
            - save
            - "/backup/backup.db"
            - --endpoints=https://127.0.0.1:2379
            - --cacert=/etc/kubernetes/pki/etcd/ca.crt
            - --cert=/etc/kubernetes/pki/etcd/server.crt
            - --key=/etc/kubernetes/pki/etcd/server.key
            command:
            - /usr/local/bin/etcdctl
            env:
            - name: ETCDCTL_API
              value: "3"
            image: registry.k8s.io/etcd:3.5.16-0
            imagePullPolicy: IfNotPresent
            name: backup
            resources: {}
            terminationMessagePath: /dev/termination-log
            terminationMessagePolicy: File
            volumeMounts:
            - mountPath: /etc/kubernetes/pki/etcd
              name: etcd-certs
              readOnly: true
            - mountPath: /backup
              name: backup
          containers:
          - args:
            - -c
            - mv /backup/backup.db /backup/etcd-snapshot-$(date +%Y%m%d_%H%M%S_%Z).db
            command:
            - /bin/sh
            image: busybox:1.31.1
            imagePullPolicy: IfNotPresent
            name: move-backup
            volumeMounts:
            - mountPath: /backup
              name: backup
          - args:
            - -c
            - find /backup -type f -mtime +{{ days_to_retain }} -name '*.db' -exec rm -- '{}' \;
            command:
            - /bin/sh
            image: busybox:1.31.1
            imagePullPolicy: IfNotPresent
            name: backup-purge
            volumeMounts:
            - mountPath: /backup
              name: backup
          dnsPolicy: ClusterFirst
          hostNetwork: true
          nodeSelector:
            node-role.kubernetes.io/control-plane: ""
          restartPolicy: OnFailure
          schedulerName: default-scheduler
          securityContext: {}
          terminationGracePeriodSeconds: 30
          tolerations:
          - effect: NoSchedule
            operator: Exists
          volumes:
          - hostPath:
              path: /etc/kubernetes/pki/etcd
              type: DirectoryOrCreate
            name: etcd-certs
          - name: backup
            persistentVolumeClaim:
              claimName: etcd-backup
  schedule: "0 7 * * *"
  successfulJobsHistoryLimit: 3
  suspend: false